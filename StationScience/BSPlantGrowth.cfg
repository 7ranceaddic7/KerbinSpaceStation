CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = BSPlantGrowth
    title = Perform Experiment: Plant Growth on @/targetVessel1
	group = BasesandStations
    description = We have a nice station in orbit of @/targetBody1 perhaps we should use it to perform some science.
    synopsis = Perform experiment "Plant Growth" on @/targetVessel1 and return it to @/homeworld
    completedMessage = Fantastic! Now we know much more about how plants behave in orbit of @/targetBody1
    minExpiry = 1
    maxExpiry = 7
    cancellable = true
    declinable = true
    maxSimultaneous = 1
	rewardScience = 0.0
    rewardReputation = Random(1, 20.0)
    rewardFunds = Random(40000.0, 60000.0)
    failureReputation = Random(1, 10.0)
    failureFunds = Random(1, 10000.0)
    advanceFunds = Random(1, 10000.0)
	weight = 0.8
	targetBody = @/targetBody1
	
	    DATA
    {
        type = Vessel
		uniquenessCheck = GROUP_ACTIVE
		requiredValue = true
        targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.CrewCount()>0 && v.Parts().Contains(StnSciLab)).Random()
    }
	DATA
	{
	type = CelestialBody
	requiredValue = true
	targetBody1 = @/targetVessel1.CelestialBody()
	homeworld = HomeWorld()
	}
	
	DATA
    {
        type = ScienceSubject
		experiment = AllScienceSubjectsByBodyExperiment([@targetBody1],[plantGrowth]).Where(e => @/targetVessel1.Orbit().Apoapsis() >= @/targetBody1.SpaceAltitudeThreshold() ? e.Situation() == InSpaceHigh : e.Situation() == InSpaceLow && e.RemainingScience() >0).Random()
    }

	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		subject = @/experiment
		recoveryMethod = Recover
	}
}