CONTRACT_TYPE
{
    name = BaseScan
	group = BasesandStations 
	title = Scan for a suitable location for a new Base       
	description = They say that there is no point in building a base on @/targetBody1. Let's prove them wrong!
	synopsis = We want you to look for a location for a new Base. 
	completedMessage = We'll analyze the data and let you know when we've found a suitable spot.
    minExpiry = 3.0
	maxExpiry = 7.0
	cancellable = true
	declinable = true 
	autoAccept = false
	prestige = Significant
	maxSimultaneous = 1    
	rewardScience = 0.0
	rewardReputation = 10.0
	rewardFunds = Random(40000, 60000.0)
	failureReputation = 10.0
	failureFunds = 10000.0
	advanceFunds = 1000.0
	weight = 15.0
	targetBody = @/targetBody1

	DATA:NEEDS[!SCANsat]
	{
		type = CelestialBody
		requiredValue = true
		uniquenessCheck = GROUP_ACTIVE
		targetBody1 = OrbitedBodies().Where(b => b.IsOrbitalSurveyComplete() == false && b.HasSurface()).Random()
	}

	DATA:NEEDS[SCANsat]
	{
		type = CelestialBody
		requiredValue = true
		uniquenessCheck = GROUP_ACTIVE
		targetBody1 = OrbitedBodies().Where(b => b.SCANsatCoverage("FuzzyResources") < 80 && b.HasSurface()).Random()
	}
	
	PARAMETER:NEEDS[!SCANsat]
	{
    name = PerformOrbitalSurvey
    type = PerformOrbitalSurvey
	targetBody = @/targetBody1
	}
	
	PARAMETER:NEEDS[SCANsat]
	{
	name = SCANsatCoverage
    type = SCANsatCoverage
	targetBody = @/targetBody1
	coverage = Random(80, 95)
	scanType = FuzzyResources
	}
	
	REQUIREMENT
	{
	name = Scanner
	type = Expression
	expression = (!@/targetBody1.IsHomeWorld())
	}
	REQUIREMENT
	{
	name = PartModuleUnlocked
    type = PartModuleUnlocked
	partModule = ModuleOrbitalSurveyor
	}
	}
	