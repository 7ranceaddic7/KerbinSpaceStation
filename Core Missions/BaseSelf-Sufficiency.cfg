CONTRACT_TYPE:NEEDS[TACLifeSupport|LifeSupport]
{
    name = BaseSelfSufficiency
    title = Life Support Expansion for @/LSTarget .
    group = BasesandStations
	description = Some kerbals down there on @/LSTarget are complaining about their dependence on the ressuply vessels so this is were you come in.
    synopsis = Add a new Self-sufficiency module to @/LSTarget.
    completedMessage = Finally our kerbals aren't complaining.
    minExpiry = 1
    maxExpiry = 7
    deadline = Random(500, 1000)
    cancellable = true
    declinable = true
	maxSimultaneous = 1
    rewardScience = 0.0
    rewardReputation = Random(1.0, 2.0)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(1, 10.0)
    failureFunds = Random(1, 10000.0)
    advanceFunds = Random(1, 10000.0)
	targetBody = @/targetBody1
    weight = 5.0
	DATA
    {
        type = Vessel
        requiredValue = false
		uniquenessCheck = GROUP_ALL
        LSTarget = AllVessels().Where(v => v.CrewCount()>0 && v.IsLanded() && v.VesselType() == Base).Random()
    }
    DATA
	{
        type = Location
		vesselLocation = @LSTarget.Location()	
    }
	DATA
	{
        type = CelestialBody
		requiredValue = true
		targetBody1 = @/LSTarget.CelestialBody()
    }

	PARAMETER:NEEDS[TACLifeSupport]
	{
	    name = Self-Sufficiency
		type = PartValidation
		title = Have at least 2 TACLS resource converters
	    partModule = TacGenericConverter
		minCount = 2		
	}
	PARAMETER:NEEDS[LifeSupport]
	{
	    name = Self-Sufficiency
		type = PartValidation
		title = Have a USILS Greenhouse
	    part = USILS_Greenhouse
		minCount = 1
	}
	PARAMETER
    {
        name = VisitWaypoint
		type = VisitWaypoint
		index = 0
		distance = 500.0
		title = Land near @/LSTarget 
	}
	 BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Base
		     targetBody = @/targetBody1
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }	
	REQUIREMENT:NEEDS[TACLifeSupport]
    {
        name = PartModuleUnlocked
        type = PartModuleUnlocked
        partModule = TacGenericConverter
    }
	REQUIREMENT:NEEDS[LifeSupport]
    {
        name = PartUnlocked
        type = PartUnlocked
		part = USILS_Greenhouse
    }
		REQUIREMENT
	{
	name = Scanner
	type = Expression
	expression = (!@/targetBody1.IsHomeWorld())
	}
}
		