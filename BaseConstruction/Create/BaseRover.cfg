CONTRACT_TYPE
{
	name = BaseRover	  
    title = Land a Rover on @/targetBody1 for the new Base
	description = Some of our engineers were arguing about where to put a base on @/targetBody1 surface since the photos taked by the scanning device weren't exactly the best when a guy come in and say "Why don't you take a rover into @/targetBody1 's surface?" so this is were you come in.
    notes = Remember to leave the Rover near where you want to make the base.
	group = BaseCreate
    synopsis = We want you to look for a flat place for the  Base.   
    completedMessage = You have found a flat place for the Base.
    minExpiry = 3.0
    maxExpiry = 7.0
    cancellable = true
    declinable = true 
    autoAccept = false
    prestige = Significant   
    maxCompletions = 2
	maxSimultaneous = 1  
    rewardScience = 70.0
    rewardReputation = 20.0
    rewardFunds = Random(100000, 170000)
    failureReputation = 20.0
    failureFunds = 10000.0
    advanceFunds = 1000.0
    weight = 15.0
	targetBody = @/targetBody1
	
	DATA
	{
        type = CelestialBody
		requiredValue = true
		activeUniqueValue = true
		targetBody1 = LandedBodies().Where(b.IsOrbitalSurveyComplete() == true).Random()
    }
	
		DATA
	{
        type = List<Vessel>
		requiredValue = false
		BaseList = AllVessels().Where(v.VesselType == Base && v.CelestialBody() == @/targetBody1)
    }
	
	DATA
	{
        type = double
		requiredValue = false
		BaseCount = BaseList.Count()
    }
	
	DATA
	{
		type = CelestialBody
		requiredValue = false
		RoverCheck = Vessel(BaseRover).CelestialBody()
	}
	
	BEHAVIOUR
{
    name = Expression
    type = Expression
	    CONTRACT_COMPLETED_SUCCESS
    {
        type = bool
		BaseConstruction = true
    }
}
	
    PARAMETER
    {
    name = NewRover
    type = VesselParameterGroup
    title = Find a suitable site to build our base on.
	define = BaseRover
    notes = Once you find the site for your base, change the vessel type to Rover.
	targetBody = @/targetBody1
		
	PARAMETER
	{
	name = Any
	type = Any
	
	PARAMETER
	{
    name = ReachState
    type = ReachState
	targetBody = @/targetBody1
	situation = LANDED
	}
	
	PARAMETER
	{
    name = ReachState
    type = ReachState
	targetBody = @/targetBody1
	situation = SPLASHED
	}
	}
	
	PARAMETER
	{
    name = VesselIsType
    type = VesselIsType
	vesselType = Rover
	}
	
	PARAMETER
	{
	name = Duration
    type = Duration
	completeInSequence = true
	duration = 2m
	preWaitText = Searching for suitable site
	waitingText = Surveying Area
	completionText = This will do!
	}
	}
	
	REQUIREMENT
	{
	name = NotHomeworld
	type = Expression
	expression = (!@/targetBody1.IsHomeWorld())
	}
		REQUIREMENT
	{
	name = BaseCount
	type = Expression
	expression = (BaseCount == 0)
	}
	
	REQUIREMENT
	{
	name = BaseCount
	type = Expression
	expression = (RoverCheck != @/targetBody1)
	}
	
		REQUIREMENT
	{
	name = BaseConstruct
	type = Expression
	expression = ($BaseConstruction == false)
	}
	
}
