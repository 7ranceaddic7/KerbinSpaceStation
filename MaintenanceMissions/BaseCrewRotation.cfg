CONTRACT_TYPE
{
    name = BaseCrewRotation
    title = Do a crew rotation to @/targetVessel1.
    group = BasesandStations
	description = Oh no, @/targetKerbal1 forgot his marriage anniversary so bring him back to @/targetBody2 right now. Also @/targetKerbal2 is feeling a little homesick so bring him back too.
    synopsis = Bring back to @/targetBody2 @/targetKerbal1 and @/targetKerbal2 .
    completedMessage = Uff @/targetKerbal1 would like to thank you. He got back just in time.
    minExpiry = 1
    maxExpiry = 7)
    cancellable = true
    declinable = true
	maxSimultaneous = 1
    rewardScience = 0.0
    rewardReputation = Random(10.0, 20.0)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(1,2)
    failureFunds = Random(1000, 10000.0)
    advanceFunds = Random(1000, 10000.0)
	targetBody = @/targetBody1
    weight = 5.0
	DATA
    {
        type = Vessel
		requiredValue = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.IsLanded() && v.VesselType() == Base && v.CrewCount()>=2).Random()
    }	
	DATA
	{
        type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
    }
	DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
    }
	DATA
	{
		type = Kerbal
		uniquenessCheck = GROUP_ACTIVE
		targetKerbal1 = @/targetVessel1.Crew().Random()
	}
	DATA
	{
		type = Kerbal
		uniquenessCheck = GROUP_ACTIVE
		targetKerbal2 = @/targetVessel1.Crew().Random()
	}
    DATA
	{
        type = Location
		vesselLocation = @/targetVessel1.Location()	
    }

		PARAMETER
		{
	        name = All
			type = All
			title = Land on @/targetBody1 near @/targetVessel1	
			PARAMETER
			{
		        name = ReachState
				type = ReachState
				situation = LANDED
				targetBody = @/targetBody1
				title = Land on @/targetBody1
				hideChildren = true	
			}
			PARAMETER
			{
                name = VisitWaypoint
				type = VisitWaypoint
				index = 0
				distance = 100.0
				title = Near @/targetVessel1
			}
	    }
		
        PARAMETER
		{
            name = BoardBase
			type = VesselParameterGroup
			title = Board 2 Kerbals on @/targetVessel1
			vessel = @/targetVessel1
			PARAMETER
			{
                name = BoardBase1
				type = HasCrew
				minCrew = 2
				title = Leave at least 2 kerbals on @/targetVessel1 .
		    }
		}
	    PARAMETER
        {
            name = RecoverKerbal
			type = RecoverKerbal
			kerbal = @/targetKerbal1
			title = Bring back @/targetKerbal1
		}	
	    PARAMETER
		{
		    name = RecoverKerbal
			type = RecoverKerbal
			kerbal = @/targetKerbal2
			title = Bring back @/targetKerbal2
		}
	BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Base
		     targetBody = @/targetVessel1.CelestialBody()
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
	REQUIREMENT
{
    name = CompleteContract
    type = CompleteContract
	contractType = BaseCrewRotation
	minCount = 0
	cooldownDuration = 10d
}

	REQUIREMENT
{
    name = CompleteContract
    type = Expression
	expression = (!@/targetBody1.IsHomeWorld())
}
}